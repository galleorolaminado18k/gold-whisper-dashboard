services:
  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      POSTGRES_USER: chatwoot
      POSTGRES_PASSWORD: chatwoot
      POSTGRES_DB: chatwoot_production
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatwoot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:6
    restart: always
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "redispass123"]
    environment:
      REDIS_PASSWORD: redispass123
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  chatwoot:
    image: chatwoot/chatwoot:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      NODE_ENV: production
      INSTALLATION_ENV: docker
      FRONTEND_URL: http://localhost:3020
      FORCE_SSL: "false"
      SECRET_KEY_BASE: 6fe54df4d64d6e1f31b80d695d3e08d56f14eea4e9ef0f8fc6e7cf4b5efb5555e5a9e925203c2af833575f89c49ee38cd5e99e867c146da9b3582102138e9d37
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: chatwoot
      POSTGRES_PASSWORD: chatwoot
      POSTGRES_DATABASE: chatwoot_production
      REDIS_URL: redis://:redispass123@redis:6379
    ports:
      - "3020:3000"
    command: >
      sh -c "bundle exec rails db:chatwoot_prepare && bundle exec rails s -p 3000 -b 0.0.0.0"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  sidekiq:
    image: chatwoot/chatwoot:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chatwoot:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      NODE_ENV: production
      INSTALLATION_ENV: docker
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: chatwoot
      POSTGRES_PASSWORD: chatwoot
      POSTGRES_DATABASE: chatwoot_production
      REDIS_URL: redis://:redispass123@redis:6379
    command: bundle exec sidekiq
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[s]idekiq' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  pgdata:
  redisdata:
